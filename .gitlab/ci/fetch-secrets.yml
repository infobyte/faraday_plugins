.get_secrets:
  script:
    - FOLDER=$(echo "$CI_COMMIT_BRANCH" | awk '{split($1,a,"_");split($1,b,"/"); if (b[2]=="dev"||b[2]=="staging"||b[2]=="master") print b[2]; else print "dev"; fi}')
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=$VAULT_ROLE jwt=$CI_JOB_JWT)"; if [ -z "$VAULT_TOKEN" ]; then exit 1; fi
    - if [ -z "$AGENT_TOKEN" ]; then export AGENT_TOKEN="$(vault kv get -field=AGENT_TOKEN secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$AGENT_TOKEN" ]; then exit 1; fi
    - if [ -z "$API_DEPLOY_SERVER" ]; then export API_DEPLOY_SERVER="$(vault kv get -field=API_DEPLOY_SERVER secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$API_DEPLOY_SERVER" ]; then exit 1; fi
    - if [ -z "$AWS_ACCESS_KEY_ID" ]; then export AWS_ACCESS_KEY_ID="$(vault kv get -field=AWS_ACCESS_KEY_ID secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$AWS_ACCESS_KEY_ID" ]; then exit 1; fi
    - if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then export AWS_SECRET_ACCESS_KEY="$(vault kv get -field=AWS_SECRET_ACCESS_KEY secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then exit 1; fi
    - if [ -z "$CACHIX_CONFG" ]; then export CACHIX_CONFG="$(vault kv get -field=CACHIX_CONFG secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$CACHIX_CONFG" ]; then exit 1; fi
    - if [ -z "$DEPLOY_APIDOC_DESTINY_SSH_KEY_PRIV" ];  then export DEPLOY_APIDOC_DESTINY_SSH_KEY_PRIV="$(vault kv get -field=DEPLOY_APIDOC_DESTINY_SSH_KEY_PRIV secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "DEPLOY_APIDOC_DESTINY_SSH_KEY_PRIV" ]; then exit 1; fi
    - if [ -z "$DOCKER_PASS" ]; then export DOCKER_PASS="$(vault kv get -field=DOCKER_PASS secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$DOCKER_PASS" ]; then exit 1; fi
    - if [ -z "$DOCKER_USER" ]; then export DOCKER_USER="$(vault kv get -field=DOCKER_USER secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$DOCKER_USER" ]; then exit 1; fi
    - if [ -z "$FARADAY_LICENSE_TAR_GZ" ]; then export FARADAY_LICENSE_TAR_GZ="$(vault kv get -field=FARADAY_LICENSE_TAR_GZ secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$FARADAY_LICENSE_TAR_GZ" ]; then exit 1; fi
    - if [ -z "$FARADAY_LICENSE_TAR_GZ_OLD" ]; then export FARADAY_LICENSE_TAR_GZ_OLD="$(vault kv get -field=FARADAY_LICENSE_TAR_GZ_OLD secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$FARADAY_LICENSE_TAR_GZ_OLD" ]; then exit 1; fi
    - if [ -z "$GCLOUD_STORAGE_KEY_FILE" ]; then export GCLOUD_STORAGE_KEY_FILE="$(vault kv get -field=GCLOUD_STORAGE_KEY_FILE secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$GCLOUD_STORAGE_KEY_FILE" ]; then exit 1; fi
    - if [ -z "$GCLOUD_STORAGE_PROD_KEY_FILE" ]; then export GCLOUD_STORAGE_PROD_KEY_FILE="$(vault kv get -field=GCLOUD_STORAGE_PROD_KEY_FILE secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$GCLOUD_STORAGE_PROD_KEY_FILE" ]; then exit 1; fi
    - if [ -z "$GITLAB_DEPLOY_SERVICE_PRODUCTION" ]; then export GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE="$(vault kv get -field=GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE" ]; then exit 1; fi
    - if [ -z "$GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE" ]; then export GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE="$(vault kv get -field=GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE secrets/gitlab/faraday)"; fi; if [ -z "$GITLAB_DEPLOY_SERVICE_PRODUCTION_JSON_FILE" ]; then exit 1; fi
    - if [ -z "$GITLAB_SSH_KNOWN_HOST" ]; then export GITLAB_SSH_KNOWN_HOST="$(vault kv get -field=GITLAB_SSH_KNOWN_HOST secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$GITLAB_SSH_KNOWN_HOST" ]; then exit 1; fi
    - if [ -z "$GOOGLE_KEY" ]; then export GOOGLE_KEY="$(vault kv get -field=GOOGLE_KEY secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$GOOGLE_KEY" ]; then exit 1; fi
    - if [ -z "$PORTAL_API_TOKEN" ]; then export PORTAL_API_TOKEN="$(vault kv get -field=PORTAL_API_TOKEN secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$PORTAL_API_TOKEN" ]; then exit 1; fi
    - if [ -z "$PROJECT_ID_PRODUCTION" ]; then export PROJECT_ID_PRODUCTION="$(vault kv get -field=PROJECT_ID_PRODUCTION secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$PROJECT_ID_PRODUCTION" ]; then exit 1; fi
    - if [ -z "$SSH_PRIVATE_KEY_OTHER_REPOS_GITLAB" ]; then export SSH_PRIVATE_KEY_OTHER_REPOS_GITLAB="$(vault kv get -field=SSH_PRIVATE_KEY_OTHER_REPOS_GITLAB secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$SSH_PRIVATE_KEY_OTHER_REPOS_GITLAB" ]; then exit 1; fi
    - if [ -z "$ACCOUNT_ID" ]; then export ACCOUNT_ID="$(vault kv get -field=ACCOUNT_ID secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$ACCOUNT_ID" ]; then exit 1; fi
    - if [ -z "$AWS_REGION" ]; then export AWS_REGION="$(vault kv get -field=AWS_REGION secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$AWS_REGION" ]; then exit 1; fi
    - if [ -z "$IMAGE_NAME" ]; then export IMAGE_NAME="$(vault kv get -field=IMAGE_NAME secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$IMAGE_NAME" ]; then exit 1; fi
    - if [ -z "$DEVSECOPS_WORKSPACE" ]; then export DEVSECOPS_WORKSPACE="$(vault kv get -field=DEVSECOPS_WORKSPACE secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$DEVSECOPS_WORKSPACE" ]; then exit 1; fi
    - if [ -z "$FARADAY_URL" ]; then export FARADAY_URL="$(vault kv get -field=FARADAY_URL secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$FARADAY_URL" ]; then exit 1; fi
    - if [ -z "$FARADAY_USER" ]; then export FARADAY_USER="$(vault kv get -field=FARADAY_USER secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$FARADAY_USER" ]; then exit 1; fi
    - if [ -z "$FARADAY_PASSWORD" ]; then export FARADAY_PASSWORD="$(vault kv get -field=FARADAY_PASSWORD secrets/gitlab/faraday/$FOLDER)"; fi; if [ -z "$FARADAY_PASSWORD" ]; then exit 1; fi
    - echo $FARADAY_URL - $FARADAY_USER $DEVSECOPS_WORKSPACE $FOLDER
